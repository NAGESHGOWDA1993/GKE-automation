name: GKE-Cluster-Create

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (Create/Destroy)'
        required: true
      project:
        description: 'Google Cloud project ID'
        required: true
      cluster_name:
        description: 'GKE Cluster name'
        required: true
      region:
        description: 'GCP region'
        required: true
      machine_type:
        description: 'Machine type for the GKE nodes'
        required: true
      node_count:
        description: 'Initial number of nodes in the GKE cluster'
        required: true

jobs:
  Create-Cluster:
    runs-on: ubuntu-latest
    if : ${{ github.event.inputs.action == 'create' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Configure Google Cloud credentials
        uses: google-github-actions/setup-gcloud@v1

      - name: Authenticate gcloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          
      - name: Initialize Terraform
        working-directory: terraform
        run: terraform init -backend-config="gke_tf_states" -backend-config="key=terraform/state/${{ github.event.inputs.cluster_name }}/gke"
        
      - name: Apply Terraform Changes
        working-directory: terraform
        run: terraform apply -auto-approve -var="project=${{ github.event.inputs.project }}" -var="region=${{ github.event.inputs.region }}" -var="cluster_name=${{ github.event.inputs.cluster_name }}" -var="machine_type=${{ github.event.inputs.machine_type }}" -var="node_count=${{ github.event.inputs.node_count }}"

      - name: Deploy Application to GKE Cluster and Expose Service
        run: |
          kubectl create deployment my-app --image=httpd
          kubectl get pods
          kubectl create service nodeport my-app --tcp=8080:80
          kubectl get svc
          kubectl get nodes -o wide

  Destroy-Cluster:
    runs-on: ubuntu-latest
    if : ${{ github.event.inputs.action == 'destroy' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Configure Google Cloud credentials
        uses: google-github-actions/setup-gcloud@v1

      - name: Authenticate gcloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          
      - name: Initialize Terraform
        working-directory: terraform
        run: terraform init
        
      - name: Terraform Destroy
        working-directory: terraform
        run: terraform destroy -auto-approve -var="project=${{ github.event.inputs.project }}" -var="region=${{ github.event.inputs.region }}" -var="cluster_name=${{ github.event.inputs.cluster_name }}" -var="machine_type=${{ github.event.inputs.machine_type }}" -var="node_count=${{ github.event.inputs.node_count }}"

    
